// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Newsletter.Data;

#nullable disable

namespace Newsletter.Data.Migrations
{
    [DbContext(typeof(NewsletterDbContext))]
    [Migration("20231023072029_M1")]
    partial class M1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.12");

            modelBuilder.Entity("Newsletter.Data.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("NewsletterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ArticleId");

                    b.HasIndex("NewsletterId");

                    b.ToTable("Article");

                    b.HasData(
                        new
                        {
                            ArticleId = 1,
                            Content = "This is the first article",
                            NewsletterId = 1,
                            Title = "First Article"
                        },
                        new
                        {
                            ArticleId = 2,
                            Content = "This is the second article",
                            NewsletterId = 1,
                            Title = "Second Article"
                        },
                        new
                        {
                            ArticleId = 3,
                            Content = "This is the third article",
                            NewsletterId = 2,
                            Title = "Third Article"
                        },
                        new
                        {
                            ArticleId = 4,
                            Content = "This is the fourth article",
                            NewsletterId = 2,
                            Title = "Fourth Article"
                        },
                        new
                        {
                            ArticleId = 5,
                            Content = "This is the fifth article",
                            NewsletterId = 3,
                            Title = "Fifth Article"
                        },
                        new
                        {
                            ArticleId = 6,
                            Content = "This is the sixth article",
                            NewsletterId = 3,
                            Title = "Sixth Article"
                        });
                });

            modelBuilder.Entity("Newsletter.Data.Newsletter", b =>
                {
                    b.Property<int>("NewsletterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NewsTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SequentialNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("NewsletterId");

                    b.ToTable("Newsletters");

                    b.HasData(
                        new
                        {
                            NewsletterId = 1,
                            Date = new DateTime(2023, 10, 23, 0, 20, 29, 838, DateTimeKind.Local).AddTicks(4866),
                            IsActive = true,
                            NewsTitle = "First Newsletter",
                            SequentialNumber = 1
                        },
                        new
                        {
                            NewsletterId = 2,
                            Date = new DateTime(2023, 10, 23, 0, 20, 29, 838, DateTimeKind.Local).AddTicks(4928),
                            IsActive = true,
                            NewsTitle = "Second Newsletter",
                            SequentialNumber = 2
                        },
                        new
                        {
                            NewsletterId = 3,
                            Date = new DateTime(2023, 10, 23, 0, 20, 29, 838, DateTimeKind.Local).AddTicks(4933),
                            IsActive = false,
                            NewsTitle = "Third Newsletter",
                            SequentialNumber = 3
                        });
                });

            modelBuilder.Entity("Newsletter.Data.UserData", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("UserData");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "aa@aa.aa",
                            Password = "P@ssw0rd"
                        });
                });

            modelBuilder.Entity("Newsletter.Data.Article", b =>
                {
                    b.HasOne("Newsletter.Data.Newsletter", "Newsletter")
                        .WithMany("Articles")
                        .HasForeignKey("NewsletterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Newsletter");
                });

            modelBuilder.Entity("Newsletter.Data.Newsletter", b =>
                {
                    b.Navigation("Articles");
                });
#pragma warning restore 612, 618
        }
    }
}
